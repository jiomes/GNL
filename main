#include <iostream>
#include <GL/glut.h>

// 窗口大小
int windowWidth = 800;
int windowHeight = 600;

// 相机位置
float cameraX = 0.0f;
float cameraY = 0.0f;
float cameraZ = 5.0f;

// 相机旋转角度
float cameraAngleX = 0.0f;
float cameraAngleY = 0.0f;

void init() {
    glEnable(GL_DEPTH_TEST);
}

void display() {
    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
    glLoadIdentity();

    // 设置相机位置和方向
    glRotatef(-cameraAngleX, 1.0f, 0.0f, 0.0f);
    glRotatef(-cameraAngleY, 0.0f, 1.0f, 0.0f);
    glTranslatef(-cameraX, -cameraY, -cameraZ);

    // 绘制一个简单的立方体
    glBegin(GL_QUADS);

    glColor3f(1.0f, 0.0f, 0.0f); // 红色
    glVertex3f(-1.0f, 1.0f, -1.0f);
    glVertex3f(-1.0f, -1.0f, -1.0f);
    glVertex3f(1.0f, -1.0f, -1.0f);
    glVertex3f(1.0f, 1.0f, -1.0f);

    // 其他面省略

    glEnd();

    glutSwapBuffers();
}

void reshape(int w, int h) {
    glViewport(0, 0, w, h);
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluPerspective(45.0, (GLfloat)w / (GLfloat)h, 1.0, 100.0);
    glMatrixMode(GL_MODELVIEW);
}

void keyboard(unsigned char key, int x, int y) {
    switch (key) {
        case 'w':
            cameraZ -= 0.1f;
            break;
        case 's':
            cameraZ += 0.1f;
            break;
        case 'a':
            cameraX -= 0.1f;
            break;
        case 'd':
            cameraX += 0.1f;
            break;
    }
    glutPostRedisplay();
}

void specialKeys(int key, int x, int y) {
    switch (key) {
        case GLUT_KEY_UP:
            cameraAngleX += 1.0f;
            break;
        case GLUT_KEY_DOWN:
            cameraAngleX -= 1.0f;
            break;
        case GLUT_KEY_LEFT:
            cameraAngleY += 1.0f;
            break;
        case GLUT_KEY_RIGHT:
            cameraAngleY -= 1.0f;
            break;
    }
    glutPostRedisplay();
}

int main(int argc, char** argv) {
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB | GLUT_DEPTH);
    glutInitWindowSize(windowWidth, windowHeight);
    glutCreateWindow("Simple 3D Game Engine");

    init();

    glutDisplayFunc(display);
    glutReshapeFunc(reshape);
    glutKeyboardFunc(keyboard);
    glutSpecialFunc(specialKeys);

    glutMainLoop();

    return 0;
}
